name: Python App Workflow

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.x

        - name: Install dependencies
          run: pip install -r requirements.txt

        # - name: Run tests
        #   run: pytest

        - name: Run pylint
          id: pylint
          run: pylint --rcfile .pylintrc src/main.py | tee pylint_output.txt

        - name: Parse Pylint score
          id: parse_pylint_score
          run: |
            pylint_output=$(cat pylint_output.txt)
            pylint_score=$(echo "$pylint_output" | awk '/Your code has been rated at/ {print $7}')
            echo "::set-output name=pylint_score::$pylint_score"
  
        - name: Check Pylint score
          run: |
            pylint_score="${{ steps.parse_pylint_score.outputs.pylint_score }}"
            if (( $(echo "$pylint_score >= 80" | bc -l) )); then
              echo "Pylint score is $pylint_score, which meets the threshold."
              exit 0  # Success
            else
              echo "Pylint score is $pylint_score, which does not meet the threshold."
              exit 1  # Failure
            fi

        - name: Build executable
          run: pyinstaller --onefile src/main.py -n mc_server_controller

        # - name: Move executable to dist folder
        #   run: mv dist/your_python_file /path/to/your/repo/dist/

        - name: Commit changes
          run: |
                git config --global user.name "GitHub Action"
                git config --global user.email "action@github.com"
                git add .
                git commit -m "Add executable to dist folder"
                git push